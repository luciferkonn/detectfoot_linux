// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="DetectorNewStep,hls_ip_2015_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.220000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=13,HLS_SYN_FF=2840,HLS_SYN_LUT=6167}" *)

module DetectorNewStep (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        oriValues_TDATA,
        oriValues_TVALID,
        oriValues_TREADY,
        step_TDATA,
        step_TVALID,
        step_TREADY
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 41'b1;
parameter    ap_ST_st2_fsm_1 = 41'b10;
parameter    ap_ST_st3_fsm_2 = 41'b100;
parameter    ap_ST_st4_fsm_3 = 41'b1000;
parameter    ap_ST_st5_fsm_4 = 41'b10000;
parameter    ap_ST_st6_fsm_5 = 41'b100000;
parameter    ap_ST_st7_fsm_6 = 41'b1000000;
parameter    ap_ST_st8_fsm_7 = 41'b10000000;
parameter    ap_ST_st9_fsm_8 = 41'b100000000;
parameter    ap_ST_st10_fsm_9 = 41'b1000000000;
parameter    ap_ST_st11_fsm_10 = 41'b10000000000;
parameter    ap_ST_st12_fsm_11 = 41'b100000000000;
parameter    ap_ST_st13_fsm_12 = 41'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 41'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 41'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 41'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 41'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 41'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 41'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 41'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 41'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 41'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 41'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 41'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 41'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 41'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 41'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 41'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 41'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 41'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 41'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 41'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 41'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 41'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 41'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 41'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 41'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 41'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 41'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 41'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 41'b10000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_40000000 = 32'b1000000000000000000000000000000;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_3FA66666 = 32'b111111101001100110011001100110;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv12_800 = 12'b100000000000;
parameter    ap_const_lv12_1 = 12'b1;
parameter    ap_const_lv11_7FF = 11'b11111111111;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv9_181 = 9'b110000001;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv8_7F = 8'b1111111;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv32_F9 = 32'b11111001;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] oriValues_TDATA;
input   oriValues_TVALID;
output   oriValues_TREADY;
output  [31:0] step_TDATA;
output   step_TVALID;
input   step_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg oriValues_TREADY;
reg step_TVALID;
reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [40:0] ap_CS_fsm = 41'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_59;
reg   [31:0] peakOfWave = 32'b00000000000000000000000000000000;
reg   [31:0] valleyOfWave = 32'b00000000000000000000000000000000;
reg   [31:0] reg_282;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_81;
wire   [0:0] exitcond1_fu_302_p2;
reg    ap_sig_bdd_88;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_97;
wire   [31:0] grp_fu_254_p2;
reg   [31:0] reg_288;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_109;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_116;
wire   [31:0] grp_fu_250_p2;
reg   [31:0] reg_294;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_126;
reg    ap_sig_cseq_ST_st38_fsm_37;
reg    ap_sig_bdd_134;
wire   [11:0] j_1_fu_308_p2;
reg   [11:0] j_1_reg_708;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_145;
wire   [31:0] grp_fu_258_p2;
reg   [31:0] tmp_1_reg_740;
wire   [31:0] grp_fu_273_p2;
reg   [31:0] tmp_5_reg_745;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_bdd_157;
wire   [10:0] i_2_fu_341_p2;
reg   [10:0] i_2_reg_753;
reg    ap_sig_cseq_ST_st30_fsm_29;
reg    ap_sig_bdd_166;
wire   [0:0] exitcond_fu_335_p2;
reg    ap_sig_ioackin_step_TREADY;
wire   [63:0] tmp_7_fu_347_p1;
reg   [63:0] tmp_7_reg_758;
wire   [0:0] tmp_29_fu_388_p2;
reg   [0:0] tmp_29_reg_768;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_bdd_188;
wire   [31:0] values_q0;
reg   [31:0] gravityOld_1_reg_772;
wire   [0:0] grp_DetectorNewStep_DetectorPeak_fu_231_ap_return;
reg   [0:0] tmp_9_reg_778;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_bdd_199;
wire    grp_DetectorNewStep_DetectorPeak_fu_231_ap_done;
wire   [31:0] currentTime_q0;
reg   [31:0] currentTime_load_reg_787;
reg    ap_sig_cseq_ST_st34_fsm_33;
reg    ap_sig_bdd_217;
reg   [0:0] p_Result_s_reg_802;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_bdd_230;
wire   [22:0] loc_V_1_fu_425_p1;
reg   [22:0] loc_V_1_reg_807;
wire   [0:0] isNeg_fu_439_p3;
reg   [0:0] isNeg_reg_812;
wire   [8:0] sh_assign_1_fu_457_p3;
reg   [8:0] sh_assign_1_reg_817;
wire   [31:0] p_Val2_s_fu_533_p3;
reg   [31:0] p_Val2_s_reg_823;
reg    ap_sig_cseq_ST_st39_fsm_38;
reg    ap_sig_bdd_247;
wire   [0:0] tmp_10_fu_552_p2;
reg   [0:0] tmp_10_reg_835;
wire   [0:0] tmp_32_fu_606_p2;
reg   [0:0] tmp_32_reg_842;
wire   [0:0] tmp_36_fu_636_p2;
reg   [0:0] tmp_36_reg_847;
wire   [0:0] tmp_39_fu_685_p2;
reg   [0:0] tmp_39_reg_852;
reg    ap_sig_cseq_ST_st40_fsm_39;
reg    ap_sig_bdd_262;
reg   [10:0] values_address0;
reg    values_ce0;
reg    values_we0;
wire   [31:0] values_d0;
reg   [10:0] currentTime_address0;
reg    currentTime_ce0;
reg    currentTime_we0;
wire   [31:0] currentTime_d0;
wire    grp_DetectorNewStep_Peak_Valley_Thread_fu_218_ap_start;
wire    grp_DetectorNewStep_Peak_Valley_Thread_fu_218_ap_done;
wire    grp_DetectorNewStep_Peak_Valley_Thread_fu_218_ap_idle;
wire    grp_DetectorNewStep_Peak_Valley_Thread_fu_218_ap_ready;
wire   [31:0] grp_DetectorNewStep_Peak_Valley_Thread_fu_218_value_r;
wire   [31:0] grp_DetectorNewStep_Peak_Valley_Thread_fu_218_ap_return;
wire    grp_DetectorNewStep_DetectorPeak_fu_231_ap_start;
wire    grp_DetectorNewStep_DetectorPeak_fu_231_ap_idle;
wire    grp_DetectorNewStep_DetectorPeak_fu_231_ap_ready;
wire   [31:0] grp_DetectorNewStep_DetectorPeak_fu_231_newValue;
wire   [31:0] grp_DetectorNewStep_DetectorPeak_fu_231_oldValue;
wire   [31:0] grp_DetectorNewStep_DetectorPeak_fu_231_peakOfWave;
wire    grp_DetectorNewStep_DetectorPeak_fu_231_peakOfWave_ap_vld;
wire   [31:0] grp_DetectorNewStep_DetectorPeak_fu_231_valleyOfWave;
wire    grp_DetectorNewStep_DetectorPeak_fu_231_valleyOfWave_ap_vld;
reg   [11:0] j_reg_182;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_bdd_311;
reg   [31:0] gravityOld_reg_194;
reg    ap_sig_cseq_ST_st41_fsm_40;
reg    ap_sig_bdd_323;
reg   [10:0] i_reg_206;
reg    grp_DetectorNewStep_Peak_Valley_Thread_fu_218_ap_start_ap_start_reg = 1'b0;
reg    grp_DetectorNewStep_DetectorPeak_fu_231_ap_start_ap_start_reg = 1'b0;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_bdd_374;
wire   [63:0] tmp_fu_329_p1;
reg   [31:0] ThreadValue_1_1_fu_120;
reg   [31:0] timeOfLastPeak_fu_124;
wire   [31:0] timeOfThisPeak_fu_678_p3;
reg   [31:0] step2_fu_128;
wire   [31:0] step2_1_fu_665_p3;
reg    ap_reg_ioackin_step_TREADY = 1'b0;
reg   [31:0] grp_fu_250_p0;
reg   [31:0] grp_fu_250_p1;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_441;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_448;
reg   [31:0] grp_fu_254_p0;
reg   [31:0] grp_fu_254_p1;
wire   [31:0] grp_fu_258_p0;
wire   [31:0] grp_fu_258_p1;
reg   [31:0] grp_fu_266_p0;
reg   [31:0] grp_fu_266_p1;
wire   [31:0] grp_fu_273_p1;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_bdd_464;
wire   [31:0] gravityOld_to_int_fu_352_p1;
wire   [7:0] tmp_26_fu_356_p4;
wire   [22:0] tmp_8_fu_366_p1;
wire   [0:0] notrhs_fu_376_p2;
wire   [0:0] notlhs_fu_370_p2;
wire   [0:0] tmp_27_fu_382_p2;
wire   [0:0] grp_fu_266_p2;
wire   [31:0] p_Val2_1_fu_404_p1;
wire   [7:0] loc_V_fu_415_p4;
wire   [8:0] tmp_i_i_i_cast8_fu_429_p1;
wire   [8:0] sh_assign_fu_433_p2;
wire   [7:0] tmp_5_i_i_fu_447_p2;
wire  signed [8:0] tmp_5_i_i_cast_fu_453_p1;
wire   [23:0] p_Result_1_fu_465_p3;
wire  signed [31:0] sh_assign_1_cast_fu_476_p1;
wire  signed [23:0] sh_assign_1_cast_cast_fu_479_p1;
wire   [77:0] tmp_i_i_fu_472_p1;
wire   [77:0] tmp_6_i_i_fu_482_p1;
wire   [23:0] tmp_7_i_i_fu_486_p2;
wire   [0:0] tmp_17_fu_498_p3;
wire   [77:0] tmp_9_i_i_fu_492_p2;
wire   [31:0] tmp_12_fu_506_p1;
wire   [31:0] tmp_13_fu_510_p4;
wire   [31:0] p_Val2_4_fu_520_p3;
wire   [31:0] p_Val2_7_i_i_fu_527_p2;
wire   [31:0] tmp_6_fu_547_p2;
wire   [31:0] tmp_13_to_int_fu_558_p1;
wire   [31:0] ThreadValue_to_int_fu_576_p1;
wire   [7:0] tmp_30_fu_562_p4;
wire   [22:0] tmp_18_fu_572_p1;
wire   [0:0] notrhs7_fu_600_p2;
wire   [0:0] notlhs7_fu_594_p2;
wire   [7:0] tmp_31_fu_580_p4;
wire   [22:0] tmp_19_fu_590_p1;
wire   [0:0] notrhs8_fu_618_p2;
wire   [0:0] notlhs8_fu_612_p2;
wire   [0:0] tmp_33_fu_624_p2;
wire   [0:0] tmp_34_fu_630_p2;
wire   [31:0] step2_2_fu_647_p2;
wire   [0:0] tmp_37_fu_642_p2;
wire   [0:0] sel_tmp2_fu_660_p2;
wire   [31:0] step2_3_fu_653_p3;
wire   [31:0] timeOfThisPeak_2_fu_673_p3;
reg   [1:0] grp_fu_250_opcode;
reg    grp_fu_250_ce;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_648;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_656;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_666;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_674;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_682;
reg    ap_sig_cseq_ST_st35_fsm_34;
reg    ap_sig_bdd_692;
reg    ap_sig_cseq_ST_st36_fsm_35;
reg    ap_sig_bdd_700;
reg    grp_fu_254_ce;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_713;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_721;
reg    grp_fu_258_ce;
reg   [4:0] grp_fu_266_opcode;
wire   [31:0] grp_fu_273_p0;
wire    grp_fu_273_ce;
reg   [40:0] ap_NS_fsm;
reg    ap_sig_bdd_415;


DetectorNewStep_values #(
    .DataWidth( 32 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
values_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( values_address0 ),
    .ce0( values_ce0 ),
    .we0( values_we0 ),
    .d0( values_d0 ),
    .q0( values_q0 )
);

DetectorNewStep_values #(
    .DataWidth( 32 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
currentTime_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( currentTime_address0 ),
    .ce0( currentTime_ce0 ),
    .we0( currentTime_we0 ),
    .d0( currentTime_d0 ),
    .q0( currentTime_q0 )
);

DetectorNewStep_Peak_Valley_Thread grp_DetectorNewStep_Peak_Valley_Thread_fu_218(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( grp_DetectorNewStep_Peak_Valley_Thread_fu_218_ap_start ),
    .ap_done( grp_DetectorNewStep_Peak_Valley_Thread_fu_218_ap_done ),
    .ap_idle( grp_DetectorNewStep_Peak_Valley_Thread_fu_218_ap_idle ),
    .ap_ready( grp_DetectorNewStep_Peak_Valley_Thread_fu_218_ap_ready ),
    .value_r( grp_DetectorNewStep_Peak_Valley_Thread_fu_218_value_r ),
    .ap_return( grp_DetectorNewStep_Peak_Valley_Thread_fu_218_ap_return )
);

DetectorNewStep_DetectorPeak grp_DetectorNewStep_DetectorPeak_fu_231(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( grp_DetectorNewStep_DetectorPeak_fu_231_ap_start ),
    .ap_done( grp_DetectorNewStep_DetectorPeak_fu_231_ap_done ),
    .ap_idle( grp_DetectorNewStep_DetectorPeak_fu_231_ap_idle ),
    .ap_ready( grp_DetectorNewStep_DetectorPeak_fu_231_ap_ready ),
    .newValue( grp_DetectorNewStep_DetectorPeak_fu_231_newValue ),
    .oldValue( grp_DetectorNewStep_DetectorPeak_fu_231_oldValue ),
    .peakOfWave( grp_DetectorNewStep_DetectorPeak_fu_231_peakOfWave ),
    .peakOfWave_ap_vld( grp_DetectorNewStep_DetectorPeak_fu_231_peakOfWave_ap_vld ),
    .valleyOfWave( grp_DetectorNewStep_DetectorPeak_fu_231_valleyOfWave ),
    .valleyOfWave_ap_vld( grp_DetectorNewStep_DetectorPeak_fu_231_valleyOfWave_ap_vld ),
    .ap_return( grp_DetectorNewStep_DetectorPeak_fu_231_ap_return )
);

DetectorNewStep_faddfsub_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DetectorNewStep_faddfsub_32ns_32ns_32_5_full_dsp_U15(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_250_p0 ),
    .din1( grp_fu_250_p1 ),
    .opcode( grp_fu_250_opcode ),
    .ce( grp_fu_250_ce ),
    .dout( grp_fu_250_p2 )
);

DetectorNewStep_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DetectorNewStep_fmul_32ns_32ns_32_4_max_dsp_U16(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_254_p0 ),
    .din1( grp_fu_254_p1 ),
    .ce( grp_fu_254_ce ),
    .dout( grp_fu_254_p2 )
);

DetectorNewStep_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DetectorNewStep_fmul_32ns_32ns_32_4_max_dsp_U17(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_258_p0 ),
    .din1( grp_fu_258_p1 ),
    .ce( grp_fu_258_ce ),
    .dout( grp_fu_258_p2 )
);

DetectorNewStep_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
DetectorNewStep_fcmp_32ns_32ns_1_1_U18(
    .din0( grp_fu_266_p0 ),
    .din1( grp_fu_266_p1 ),
    .opcode( grp_fu_266_opcode ),
    .dout( grp_fu_266_p2 )
);

DetectorNewStep_fsqrt_32ns_32ns_32_12 #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DetectorNewStep_fsqrt_32ns_32ns_32_12_U19(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_273_p0 ),
    .din1( grp_fu_273_p1 ),
    .ce( grp_fu_273_ce ),
    .dout( grp_fu_273_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ioackin_step_TREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_step_TREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_step_TREADY <= ap_const_logic_0;
    end else begin
        if (ap_sig_bdd_415) begin
            if (~(~(ap_const_lv1_0 == exitcond_fu_335_p2) & (ap_const_logic_0 == ap_sig_ioackin_step_TREADY))) begin
                ap_reg_ioackin_step_TREADY <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == step_TREADY)) begin
                ap_reg_ioackin_step_TREADY <= ap_const_logic_1;
            end
        end
    end
end

/// grp_DetectorNewStep_DetectorPeak_fu_231_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_DetectorNewStep_DetectorPeak_fu_231_ap_start_ap_start_reg
    if (ap_rst_n_inv == 1'b1) begin
        grp_DetectorNewStep_DetectorPeak_fu_231_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31)) begin
            grp_DetectorNewStep_DetectorPeak_fu_231_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_DetectorNewStep_DetectorPeak_fu_231_ap_ready)) begin
            grp_DetectorNewStep_DetectorPeak_fu_231_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// grp_DetectorNewStep_Peak_Valley_Thread_fu_218_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_DetectorNewStep_Peak_Valley_Thread_fu_218_ap_start_ap_start_reg
    if (ap_rst_n_inv == 1'b1) begin
        grp_DetectorNewStep_Peak_Valley_Thread_fu_218_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_39) & ~(ap_const_lv1_0 == tmp_39_fu_685_p2))) begin
            grp_DetectorNewStep_Peak_Valley_Thread_fu_218_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_DetectorNewStep_Peak_Valley_Thread_fu_218_ap_ready)) begin
            grp_DetectorNewStep_Peak_Valley_Thread_fu_218_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40) & (ap_const_lv1_0 == tmp_29_reg_768) & ~(ap_const_lv1_0 == tmp_9_reg_778) & ~(ap_const_lv1_0 == tmp_39_reg_852) & ~((ap_const_lv1_0 == tmp_29_reg_768) & ~(ap_const_lv1_0 == tmp_9_reg_778) & ~(ap_const_lv1_0 == tmp_39_reg_852) & (ap_const_logic_0 == grp_DetectorNewStep_Peak_Valley_Thread_fu_218_ap_done)))) begin
        ThreadValue_1_1_fu_120 <= grp_DetectorNewStep_Peak_Valley_Thread_fu_218_ap_return;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_bdd_88 & ~(exitcond1_fu_302_p2 == ap_const_lv1_0))) begin
        ThreadValue_1_1_fu_120 <= ap_const_lv32_40000000;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40) & ~((ap_const_lv1_0 == tmp_29_reg_768) & ~(ap_const_lv1_0 == tmp_9_reg_778) & ~(ap_const_lv1_0 == tmp_39_reg_852) & (ap_const_logic_0 == grp_DetectorNewStep_Peak_Valley_Thread_fu_218_ap_done)))) begin
        gravityOld_reg_194 <= gravityOld_1_reg_772;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_bdd_88 & ~(exitcond1_fu_302_p2 == ap_const_lv1_0))) begin
        gravityOld_reg_194 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40) & ~((ap_const_lv1_0 == tmp_29_reg_768) & ~(ap_const_lv1_0 == tmp_9_reg_778) & ~(ap_const_lv1_0 == tmp_39_reg_852) & (ap_const_logic_0 == grp_DetectorNewStep_Peak_Valley_Thread_fu_218_ap_done)))) begin
        i_reg_206 <= i_2_reg_753;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_bdd_88 & ~(exitcond1_fu_302_p2 == ap_const_lv1_0))) begin
        i_reg_206 <= ap_const_lv11_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(oriValues_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28))) begin
        j_reg_182 <= j_1_reg_708;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        j_reg_182 <= ap_const_lv12_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_39)) begin
        step2_fu_128 <= step2_1_fu_665_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_bdd_88 & ~(exitcond1_fu_302_p2 == ap_const_lv1_0))) begin
        step2_fu_128 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_39)) begin
        timeOfLastPeak_fu_124 <= timeOfThisPeak_fu_678_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_bdd_88 & ~(exitcond1_fu_302_p2 == ap_const_lv1_0))) begin
        timeOfLastPeak_fu_124 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        currentTime_load_reg_787 <= currentTime_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        gravityOld_1_reg_772 <= values_q0;
        tmp_29_reg_768 <= tmp_29_fu_388_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29) & ~(~(ap_const_lv1_0 == exitcond_fu_335_p2) & (ap_const_logic_0 == ap_sig_ioackin_step_TREADY)))) begin
        i_2_reg_753 <= i_2_fu_341_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        isNeg_reg_812 <= sh_assign_fu_433_p2[ap_const_lv32_8];
        loc_V_1_reg_807 <= loc_V_1_fu_425_p1;
        p_Result_s_reg_802 <= p_Val2_1_fu_404_p1[ap_const_lv32_1F];
        sh_assign_1_reg_817 <= sh_assign_1_fu_457_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_bdd_88)) begin
        j_1_reg_708 <= j_1_fu_308_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37)) begin
        p_Val2_s_reg_823 <= p_Val2_s_fu_533_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) & (ap_const_logic_1 == grp_DetectorNewStep_DetectorPeak_fu_231_peakOfWave_ap_vld)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) & (ap_const_logic_1 == grp_DetectorNewStep_DetectorPeak_fu_231_peakOfWave_ap_vld)))) begin
        peakOfWave <= grp_DetectorNewStep_DetectorPeak_fu_231_peakOfWave;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond1_fu_302_p2 == ap_const_lv1_0) & ~ap_sig_bdd_88) | ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(oriValues_TVALID == ap_const_logic_0)))) begin
        reg_282 <= oriValues_TDATA;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        reg_288 <= grp_fu_254_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | (ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) | (ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37))) begin
        reg_294 <= grp_fu_250_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_38)) begin
        tmp_10_reg_835 <= tmp_10_fu_552_p2;
        tmp_32_reg_842 <= tmp_32_fu_606_p2;
        tmp_36_reg_847 <= tmp_36_fu_636_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        tmp_1_reg_740 <= grp_fu_258_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_39)) begin
        tmp_39_reg_852 <= tmp_39_fu_685_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        tmp_5_reg_745 <= grp_fu_273_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29) & (ap_const_lv1_0 == exitcond_fu_335_p2) & ~(~(ap_const_lv1_0 == exitcond_fu_335_p2) & (ap_const_logic_0 == ap_sig_ioackin_step_TREADY)))) begin
        tmp_7_reg_758[10 : 0] <= tmp_7_fu_347_p1[10 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) & ~(ap_const_logic_0 == grp_DetectorNewStep_DetectorPeak_fu_231_ap_done))) begin
        tmp_9_reg_778 <= grp_DetectorNewStep_DetectorPeak_fu_231_ap_return;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) & (ap_const_logic_1 == grp_DetectorNewStep_DetectorPeak_fu_231_valleyOfWave_ap_vld)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) & (ap_const_logic_1 == grp_DetectorNewStep_DetectorPeak_fu_231_valleyOfWave_ap_vld)))) begin
        valleyOfWave <= grp_DetectorNewStep_DetectorPeak_fu_231_valleyOfWave;
    end
end

/// ap_done assign process. ///
always @ (ap_sig_cseq_ST_st30_fsm_29 or exitcond_fu_335_p2 or ap_sig_ioackin_step_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29) & ~(ap_const_lv1_0 == exitcond_fu_335_p2) & ~(~(ap_const_lv1_0 == exitcond_fu_335_p2) & (ap_const_logic_0 == ap_sig_ioackin_step_TREADY)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st30_fsm_29 or exitcond_fu_335_p2 or ap_sig_ioackin_step_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29) & ~(ap_const_lv1_0 == exitcond_fu_335_p2) & ~(~(ap_const_lv1_0 == exitcond_fu_335_p2) & (ap_const_logic_0 == ap_sig_ioackin_step_TREADY)))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st10_fsm_9 assign process. ///
always @ (ap_sig_bdd_656)
begin
    if (ap_sig_bdd_656) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st11_fsm_10 assign process. ///
always @ (ap_sig_bdd_116)
begin
    if (ap_sig_bdd_116) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st12_fsm_11 assign process. ///
always @ (ap_sig_bdd_448)
begin
    if (ap_sig_bdd_448) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st13_fsm_12 assign process. ///
always @ (ap_sig_bdd_666)
begin
    if (ap_sig_bdd_666) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st14_fsm_13 assign process. ///
always @ (ap_sig_bdd_674)
begin
    if (ap_sig_bdd_674) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st15_fsm_14 assign process. ///
always @ (ap_sig_bdd_682)
begin
    if (ap_sig_bdd_682) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st16_fsm_15 assign process. ///
always @ (ap_sig_bdd_126)
begin
    if (ap_sig_bdd_126) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st17_fsm_16 assign process. ///
always @ (ap_sig_bdd_464)
begin
    if (ap_sig_bdd_464) begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_59)
begin
    if (ap_sig_bdd_59) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st28_fsm_27 assign process. ///
always @ (ap_sig_bdd_157)
begin
    if (ap_sig_bdd_157) begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st29_fsm_28 assign process. ///
always @ (ap_sig_bdd_311)
begin
    if (ap_sig_bdd_311) begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_81)
begin
    if (ap_sig_bdd_81) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st30_fsm_29 assign process. ///
always @ (ap_sig_bdd_166)
begin
    if (ap_sig_bdd_166) begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st31_fsm_30 assign process. ///
always @ (ap_sig_bdd_188)
begin
    if (ap_sig_bdd_188) begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st32_fsm_31 assign process. ///
always @ (ap_sig_bdd_374)
begin
    if (ap_sig_bdd_374) begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st33_fsm_32 assign process. ///
always @ (ap_sig_bdd_199)
begin
    if (ap_sig_bdd_199) begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st34_fsm_33 assign process. ///
always @ (ap_sig_bdd_217)
begin
    if (ap_sig_bdd_217) begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st35_fsm_34 assign process. ///
always @ (ap_sig_bdd_692)
begin
    if (ap_sig_bdd_692) begin
        ap_sig_cseq_ST_st35_fsm_34 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st35_fsm_34 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st36_fsm_35 assign process. ///
always @ (ap_sig_bdd_700)
begin
    if (ap_sig_bdd_700) begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st37_fsm_36 assign process. ///
always @ (ap_sig_bdd_230)
begin
    if (ap_sig_bdd_230) begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st38_fsm_37 assign process. ///
always @ (ap_sig_bdd_134)
begin
    if (ap_sig_bdd_134) begin
        ap_sig_cseq_ST_st38_fsm_37 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st38_fsm_37 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st39_fsm_38 assign process. ///
always @ (ap_sig_bdd_247)
begin
    if (ap_sig_bdd_247) begin
        ap_sig_cseq_ST_st39_fsm_38 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st39_fsm_38 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_145)
begin
    if (ap_sig_bdd_145) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st40_fsm_39 assign process. ///
always @ (ap_sig_bdd_262)
begin
    if (ap_sig_bdd_262) begin
        ap_sig_cseq_ST_st40_fsm_39 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st40_fsm_39 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st41_fsm_40 assign process. ///
always @ (ap_sig_bdd_323)
begin
    if (ap_sig_bdd_323) begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_713)
begin
    if (ap_sig_bdd_713) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_721)
begin
    if (ap_sig_bdd_721) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_109)
begin
    if (ap_sig_bdd_109) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_441)
begin
    if (ap_sig_bdd_441) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_97)
begin
    if (ap_sig_bdd_97) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_648)
begin
    if (ap_sig_bdd_648) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

/// ap_sig_ioackin_step_TREADY assign process. ///
always @ (step_TREADY or ap_reg_ioackin_step_TREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_step_TREADY)) begin
        ap_sig_ioackin_step_TREADY = step_TREADY;
    end else begin
        ap_sig_ioackin_step_TREADY = ap_const_logic_1;
    end
end

/// currentTime_address0 assign process. ///
always @ (tmp_7_reg_758 or ap_sig_cseq_ST_st33_fsm_32 or ap_sig_cseq_ST_st29_fsm_28 or tmp_fu_329_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        currentTime_address0 = tmp_fu_329_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        currentTime_address0 = tmp_7_reg_758;
    end else begin
        currentTime_address0 = 'bx;
    end
end

/// currentTime_ce0 assign process. ///
always @ (oriValues_TVALID or ap_sig_cseq_ST_st33_fsm_32 or grp_DetectorNewStep_DetectorPeak_fu_231_ap_done or ap_sig_cseq_ST_st29_fsm_28)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) & ~(ap_const_logic_0 == grp_DetectorNewStep_DetectorPeak_fu_231_ap_done)) | (~(oriValues_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)))) begin
        currentTime_ce0 = ap_const_logic_1;
    end else begin
        currentTime_ce0 = ap_const_logic_0;
    end
end

/// currentTime_we0 assign process. ///
always @ (oriValues_TVALID or ap_sig_cseq_ST_st29_fsm_28)
begin
    if ((~(oriValues_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28))) begin
        currentTime_we0 = ap_const_logic_1;
    end else begin
        currentTime_we0 = ap_const_logic_0;
    end
end

/// grp_fu_250_ce assign process. ///
always @ (oriValues_TVALID or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st16_fsm_15 or ap_sig_cseq_ST_st38_fsm_37 or ap_sig_cseq_ST_st34_fsm_33 or ap_sig_cseq_ST_st37_fsm_36 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st12_fsm_11 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st14_fsm_13 or ap_sig_cseq_ST_st15_fsm_14 or ap_sig_cseq_ST_st35_fsm_34 or ap_sig_cseq_ST_st36_fsm_35)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(oriValues_TVALID == ap_const_logic_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | (ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) | (ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37) | (ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33) | (ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) | (ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) | (ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34) | (ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35))) begin
        grp_fu_250_ce = ap_const_logic_1;
    end else begin
        grp_fu_250_ce = ap_const_logic_0;
    end
end

/// grp_fu_250_opcode assign process. ///
always @ (ap_sig_cseq_ST_st34_fsm_33 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st12_fsm_11)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        grp_fu_250_opcode = ap_const_lv2_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11))) begin
        grp_fu_250_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_250_opcode = 'bx;
    end
end

/// grp_fu_250_p0 assign process. ///
always @ (peakOfWave or reg_288 or reg_294 or ap_sig_cseq_ST_st34_fsm_33 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st12_fsm_11)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        grp_fu_250_p0 = peakOfWave;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        grp_fu_250_p0 = reg_294;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_fu_250_p0 = reg_288;
    end else begin
        grp_fu_250_p0 = 'bx;
    end
end

/// grp_fu_250_p1 assign process. ///
always @ (valleyOfWave or reg_288 or tmp_1_reg_740 or ap_sig_cseq_ST_st34_fsm_33 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st12_fsm_11)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        grp_fu_250_p1 = valleyOfWave;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        grp_fu_250_p1 = reg_288;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_fu_250_p1 = tmp_1_reg_740;
    end else begin
        grp_fu_250_p1 = 'bx;
    end
end

/// grp_fu_254_ce assign process. ///
always @ (oriValues_TVALID or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st5_fsm_4)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(oriValues_TVALID == ap_const_logic_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | (~(oriValues_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        grp_fu_254_ce = ap_const_logic_1;
    end else begin
        grp_fu_254_ce = ap_const_logic_0;
    end
end

/// grp_fu_254_p0 assign process. ///
always @ (oriValues_TDATA or reg_282 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st3_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_fu_254_p0 = oriValues_TDATA;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        grp_fu_254_p0 = reg_282;
    end else begin
        grp_fu_254_p0 = 'bx;
    end
end

/// grp_fu_254_p1 assign process. ///
always @ (oriValues_TDATA or reg_282 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st3_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_fu_254_p1 = oriValues_TDATA;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        grp_fu_254_p1 = reg_282;
    end else begin
        grp_fu_254_p1 = 'bx;
    end
end

/// grp_fu_258_ce assign process. ///
always @ (oriValues_TVALID or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st5_fsm_4)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (~(oriValues_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        grp_fu_258_ce = ap_const_logic_1;
    end else begin
        grp_fu_258_ce = ap_const_logic_0;
    end
end

/// grp_fu_266_opcode assign process. ///
always @ (ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st39_fsm_38 or ap_sig_cseq_ST_st40_fsm_39)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_38) | (ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_39))) begin
        grp_fu_266_opcode = ap_const_lv5_3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        grp_fu_266_opcode = ap_const_lv5_1;
    end else begin
        grp_fu_266_opcode = 'bx;
    end
end

/// grp_fu_266_p0 assign process. ///
always @ (reg_294 or ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st39_fsm_38 or ap_sig_cseq_ST_st40_fsm_39 or gravityOld_reg_194)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_38) | (ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_39))) begin
        grp_fu_266_p0 = reg_294;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        grp_fu_266_p0 = gravityOld_reg_194;
    end else begin
        grp_fu_266_p0 = 'bx;
    end
end

/// grp_fu_266_p1 assign process. ///
always @ (ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st39_fsm_38 or ap_sig_cseq_ST_st40_fsm_39 or ThreadValue_1_1_fu_120)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_39)) begin
        grp_fu_266_p1 = ap_const_lv32_3FA66666;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_38)) begin
        grp_fu_266_p1 = ThreadValue_1_1_fu_120;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        grp_fu_266_p1 = ap_const_lv32_0;
    end else begin
        grp_fu_266_p1 = 'bx;
    end
end

/// oriValues_TREADY assign process. ///
always @ (oriValues_TVALID or ap_sig_cseq_ST_st2_fsm_1 or exitcond1_fu_302_p2 or ap_sig_bdd_88 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st29_fsm_28)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond1_fu_302_p2 == ap_const_lv1_0) & ~ap_sig_bdd_88) | ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(oriValues_TVALID == ap_const_logic_0)) | (~(oriValues_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) | (~(oriValues_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)))) begin
        oriValues_TREADY = ap_const_logic_1;
    end else begin
        oriValues_TREADY = ap_const_logic_0;
    end
end

/// step_TVALID assign process. ///
always @ (ap_sig_cseq_ST_st30_fsm_29 or exitcond_fu_335_p2 or ap_reg_ioackin_step_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29) & ~(ap_const_lv1_0 == exitcond_fu_335_p2) & (ap_const_logic_0 == ap_reg_ioackin_step_TREADY))) begin
        step_TVALID = ap_const_logic_1;
    end else begin
        step_TVALID = ap_const_logic_0;
    end
end

/// values_address0 assign process. ///
always @ (ap_sig_cseq_ST_st30_fsm_29 or tmp_7_fu_347_p1 or ap_sig_cseq_ST_st29_fsm_28 or tmp_fu_329_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        values_address0 = tmp_fu_329_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        values_address0 = tmp_7_fu_347_p1;
    end else begin
        values_address0 = 'bx;
    end
end

/// values_ce0 assign process. ///
always @ (oriValues_TVALID or ap_sig_cseq_ST_st30_fsm_29 or exitcond_fu_335_p2 or ap_sig_ioackin_step_TREADY or ap_sig_cseq_ST_st29_fsm_28)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29) & ~(~(ap_const_lv1_0 == exitcond_fu_335_p2) & (ap_const_logic_0 == ap_sig_ioackin_step_TREADY))) | (~(oriValues_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)))) begin
        values_ce0 = ap_const_logic_1;
    end else begin
        values_ce0 = ap_const_logic_0;
    end
end

/// values_we0 assign process. ///
always @ (oriValues_TVALID or ap_sig_cseq_ST_st29_fsm_28)
begin
    if ((~(oriValues_TVALID == ap_const_logic_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28))) begin
        values_we0 = ap_const_logic_1;
    end else begin
        values_we0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or oriValues_TVALID or exitcond1_fu_302_p2 or ap_sig_bdd_88 or exitcond_fu_335_p2 or ap_sig_ioackin_step_TREADY or tmp_29_fu_388_p2 or tmp_29_reg_768 or grp_DetectorNewStep_DetectorPeak_fu_231_ap_return or tmp_9_reg_778 or grp_DetectorNewStep_DetectorPeak_fu_231_ap_done or tmp_39_reg_852 or grp_DetectorNewStep_Peak_Valley_Thread_fu_218_ap_done)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((~ap_sig_bdd_88 & ~(exitcond1_fu_302_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st30_fsm_29;
            end else if (((exitcond1_fu_302_p2 == ap_const_lv1_0) & ~ap_sig_bdd_88)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (~(oriValues_TVALID == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            if (~(oriValues_TVALID == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            if (~(oriValues_TVALID == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st29_fsm_28;
            end
        end
        ap_ST_st30_fsm_29 : 
        begin
            if ((~(ap_const_lv1_0 == exitcond_fu_335_p2) & ~(~(ap_const_lv1_0 == exitcond_fu_335_p2) & (ap_const_logic_0 == ap_sig_ioackin_step_TREADY)))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else if (((ap_const_lv1_0 == exitcond_fu_335_p2) & ~(~(ap_const_lv1_0 == exitcond_fu_335_p2) & (ap_const_logic_0 == ap_sig_ioackin_step_TREADY)))) begin
                ap_NS_fsm = ap_ST_st31_fsm_30;
            end else begin
                ap_NS_fsm = ap_ST_st30_fsm_29;
            end
        end
        ap_ST_st31_fsm_30 : 
        begin
            if (~(ap_const_lv1_0 == tmp_29_fu_388_p2)) begin
                ap_NS_fsm = ap_ST_st41_fsm_40;
            end else begin
                ap_NS_fsm = ap_ST_st32_fsm_31;
            end
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            if ((~(ap_const_logic_0 == grp_DetectorNewStep_DetectorPeak_fu_231_ap_done) & (ap_const_lv1_0 == grp_DetectorNewStep_DetectorPeak_fu_231_ap_return))) begin
                ap_NS_fsm = ap_ST_st41_fsm_40;
            end else if ((~(ap_const_logic_0 == grp_DetectorNewStep_DetectorPeak_fu_231_ap_done) & ~(ap_const_lv1_0 == grp_DetectorNewStep_DetectorPeak_fu_231_ap_return))) begin
                ap_NS_fsm = ap_ST_st34_fsm_33;
            end else begin
                ap_NS_fsm = ap_ST_st33_fsm_32;
            end
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : 
        begin
            if (~((ap_const_lv1_0 == tmp_29_reg_768) & ~(ap_const_lv1_0 == tmp_9_reg_778) & ~(ap_const_lv1_0 == tmp_39_reg_852) & (ap_const_logic_0 == grp_DetectorNewStep_Peak_Valley_Thread_fu_218_ap_done))) begin
                ap_NS_fsm = ap_ST_st30_fsm_29;
            end else begin
                ap_NS_fsm = ap_ST_st41_fsm_40;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ThreadValue_to_int_fu_576_p1 = ThreadValue_1_1_fu_120;

/// ap_rst_n_inv assign process. ///
always @ (ap_rst_n)
begin
    ap_rst_n_inv = ~ap_rst_n;
end

/// ap_sig_bdd_109 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_109 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_116 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_116 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_126 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_126 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end

/// ap_sig_bdd_134 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_134 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_25]);
end

/// ap_sig_bdd_145 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_145 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_157 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_157 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1B]);
end

/// ap_sig_bdd_166 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_166 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1D]);
end

/// ap_sig_bdd_188 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_188 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1E]);
end

/// ap_sig_bdd_199 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_199 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_20]);
end

/// ap_sig_bdd_217 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_217 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_21]);
end

/// ap_sig_bdd_230 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_230 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_24]);
end

/// ap_sig_bdd_247 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_247 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_26]);
end

/// ap_sig_bdd_262 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_262 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_27]);
end

/// ap_sig_bdd_311 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_311 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1C]);
end

/// ap_sig_bdd_323 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_323 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_28]);
end

/// ap_sig_bdd_374 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_374 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1F]);
end

/// ap_sig_bdd_415 assign process. ///
always @ (ap_sig_cseq_ST_st30_fsm_29 or exitcond_fu_335_p2)
begin
    ap_sig_bdd_415 = ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29) & ~(ap_const_lv1_0 == exitcond_fu_335_p2));
end

/// ap_sig_bdd_441 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_441 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_448 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_448 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end

/// ap_sig_bdd_464 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_464 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end

/// ap_sig_bdd_59 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_59 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_648 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_648 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_656 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_656 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_666 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_666 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end

/// ap_sig_bdd_674 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_674 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_682 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_682 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end

/// ap_sig_bdd_692 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_692 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_22]);
end

/// ap_sig_bdd_700 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_700 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_23]);
end

/// ap_sig_bdd_713 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_713 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_721 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_721 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_81 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_81 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_88 assign process. ///
always @ (oriValues_TVALID or exitcond1_fu_302_p2)
begin
    ap_sig_bdd_88 = ((oriValues_TVALID == ap_const_logic_0) & (exitcond1_fu_302_p2 == ap_const_lv1_0));
end

/// ap_sig_bdd_97 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_97 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end
assign currentTime_d0 = oriValues_TDATA;
assign exitcond1_fu_302_p2 = (j_reg_182 == ap_const_lv12_800? 1'b1: 1'b0);
assign exitcond_fu_335_p2 = (i_reg_206 == ap_const_lv11_7FF? 1'b1: 1'b0);
assign gravityOld_to_int_fu_352_p1 = gravityOld_reg_194;
assign grp_DetectorNewStep_DetectorPeak_fu_231_ap_start = grp_DetectorNewStep_DetectorPeak_fu_231_ap_start_ap_start_reg;
assign grp_DetectorNewStep_DetectorPeak_fu_231_newValue = gravityOld_1_reg_772;
assign grp_DetectorNewStep_DetectorPeak_fu_231_oldValue = gravityOld_reg_194;
assign grp_DetectorNewStep_Peak_Valley_Thread_fu_218_ap_start = grp_DetectorNewStep_Peak_Valley_Thread_fu_218_ap_start_ap_start_reg;
assign grp_DetectorNewStep_Peak_Valley_Thread_fu_218_value_r = reg_294;
assign grp_fu_258_p0 = oriValues_TDATA;
assign grp_fu_258_p1 = oriValues_TDATA;
assign grp_fu_273_ce = ap_const_logic_1;
assign grp_fu_273_p0 = ap_const_lv32_0;
assign grp_fu_273_p1 = reg_294;
assign i_2_fu_341_p2 = (i_reg_206 + ap_const_lv11_1);
assign isNeg_fu_439_p3 = sh_assign_fu_433_p2[ap_const_lv32_8];
assign j_1_fu_308_p2 = (j_reg_182 + ap_const_lv12_1);
assign loc_V_1_fu_425_p1 = p_Val2_1_fu_404_p1[22:0];
assign loc_V_fu_415_p4 = {{p_Val2_1_fu_404_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign notlhs7_fu_594_p2 = (tmp_30_fu_562_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs8_fu_612_p2 = (tmp_31_fu_580_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs_fu_370_p2 = (tmp_26_fu_356_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notrhs7_fu_600_p2 = (tmp_18_fu_572_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs8_fu_618_p2 = (tmp_19_fu_590_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs_fu_376_p2 = (tmp_8_fu_366_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign p_Result_1_fu_465_p3 = {{ap_const_lv1_1}, {loc_V_1_reg_807}};
assign p_Val2_1_fu_404_p1 = currentTime_load_reg_787;
assign p_Val2_4_fu_520_p3 = ((isNeg_reg_812[0:0]===1'b1)? tmp_12_fu_506_p1: tmp_13_fu_510_p4);
assign p_Val2_7_i_i_fu_527_p2 = (ap_const_lv32_0 - p_Val2_4_fu_520_p3);
assign p_Val2_s_fu_533_p3 = ((p_Result_s_reg_802[0:0]===1'b1)? p_Val2_7_i_i_fu_527_p2: p_Val2_4_fu_520_p3);
assign sel_tmp2_fu_660_p2 = (tmp_10_reg_835 & tmp_37_fu_642_p2);
assign sh_assign_1_cast_cast_fu_479_p1 = $signed(sh_assign_1_reg_817);
assign sh_assign_1_cast_fu_476_p1 = $signed(sh_assign_1_reg_817);
assign sh_assign_1_fu_457_p3 = ((isNeg_fu_439_p3[0:0]===1'b1)? tmp_5_i_i_cast_fu_453_p1: sh_assign_fu_433_p2);
assign sh_assign_fu_433_p2 = ($signed(ap_const_lv9_181) + $signed(tmp_i_i_i_cast8_fu_429_p1));
assign step2_1_fu_665_p3 = ((sel_tmp2_fu_660_p2[0:0]===1'b1)? step2_fu_128: step2_3_fu_653_p3);
assign step2_2_fu_647_p2 = (ap_const_lv32_1 + step2_fu_128);
assign step2_3_fu_653_p3 = ((tmp_10_reg_835[0:0]===1'b1)? step2_2_fu_647_p2: step2_fu_128);
assign step_TDATA = step2_fu_128;
assign timeOfThisPeak_2_fu_673_p3 = ((tmp_10_reg_835[0:0]===1'b1)? p_Val2_s_reg_823: timeOfLastPeak_fu_124);
assign timeOfThisPeak_fu_678_p3 = ((sel_tmp2_fu_660_p2[0:0]===1'b1)? timeOfLastPeak_fu_124: timeOfThisPeak_2_fu_673_p3);
assign tmp_10_fu_552_p2 = ($signed(tmp_6_fu_547_p2) > $signed(32'b11111001)? 1'b1: 1'b0);
assign tmp_12_fu_506_p1 = tmp_17_fu_498_p3;
assign tmp_13_fu_510_p4 = {{tmp_9_i_i_fu_492_p2[ap_const_lv32_36 : ap_const_lv32_17]}};
assign tmp_13_to_int_fu_558_p1 = reg_294;
assign tmp_17_fu_498_p3 = tmp_7_i_i_fu_486_p2[ap_const_lv32_17];
assign tmp_18_fu_572_p1 = tmp_13_to_int_fu_558_p1[22:0];
assign tmp_19_fu_590_p1 = ThreadValue_to_int_fu_576_p1[22:0];
assign tmp_26_fu_356_p4 = {{gravityOld_to_int_fu_352_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_27_fu_382_p2 = (notrhs_fu_376_p2 | notlhs_fu_370_p2);
assign tmp_29_fu_388_p2 = (tmp_27_fu_382_p2 & grp_fu_266_p2);
assign tmp_30_fu_562_p4 = {{tmp_13_to_int_fu_558_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_31_fu_580_p4 = {{ThreadValue_to_int_fu_576_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_32_fu_606_p2 = (notrhs7_fu_600_p2 | notlhs7_fu_594_p2);
assign tmp_33_fu_624_p2 = (notrhs8_fu_618_p2 | notlhs8_fu_612_p2);
assign tmp_34_fu_630_p2 = (tmp_32_fu_606_p2 & tmp_33_fu_624_p2);
assign tmp_36_fu_636_p2 = (tmp_34_fu_630_p2 & grp_fu_266_p2);
assign tmp_37_fu_642_p2 = (tmp_36_reg_847 ^ ap_const_lv1_1);
assign tmp_39_fu_685_p2 = (tmp_32_reg_842 & grp_fu_266_p2);
assign tmp_5_i_i_cast_fu_453_p1 = $signed(tmp_5_i_i_fu_447_p2);
assign tmp_5_i_i_fu_447_p2 = (ap_const_lv8_7F - loc_V_fu_415_p4);
assign tmp_6_fu_547_p2 = (p_Val2_s_reg_823 - timeOfLastPeak_fu_124);
assign tmp_6_i_i_fu_482_p1 = $unsigned(sh_assign_1_cast_fu_476_p1);
assign tmp_7_fu_347_p1 = i_reg_206;
assign tmp_7_i_i_fu_486_p2 = p_Result_1_fu_465_p3 >> sh_assign_1_cast_cast_fu_479_p1;
assign tmp_8_fu_366_p1 = gravityOld_to_int_fu_352_p1[22:0];
assign tmp_9_i_i_fu_492_p2 = tmp_i_i_fu_472_p1 << tmp_6_i_i_fu_482_p1;
assign tmp_fu_329_p1 = j_reg_182;
assign tmp_i_i_fu_472_p1 = p_Result_1_fu_465_p3;
assign tmp_i_i_i_cast8_fu_429_p1 = loc_V_fu_415_p4;
assign values_d0 = tmp_5_reg_745;
always @ (posedge ap_clk)
begin
    tmp_7_reg_758[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
end



endmodule //DetectorNewStep

